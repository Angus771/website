[{"body":"Init system The Micro and MicroServer ISO flavors are using runit as init system. For ease of use, a very simple helper is provided, and can be used as follows:\nList available services 1  $ runit-list   Start a service 1  $ runit-start sshd   Stop a service 1  $ runit-stop sshd   Enable a service on boot 1  $ runit-enable sshd   Disable a service from booting on startup 1  $ runit-disable sshd   ","excerpt":"Init system The Micro and MicroServer ISO flavors are using runit as …","ref":"/docs/micro/init/","title":"Init system"},{"body":"Switching kernels Micro and MicroServer images are shipping the latest available Kernel version. It is possible to switch kernels by running luet kernel-switcher.\nkernel-switcher is a luet extension, and is shipped by system/luet-extensions.\nSwitch to LTS kernels To switch to LTS kernels, run:\n1  $ luet kernel-switcher kernel/mocaccino-lts-full   Switch to main kernels To switch to main kernels, that gets updated more frequently:\n1  $ luet kernel-switcher kernel/mocaccino-full   ","excerpt":"Switching kernels Micro and MicroServer images are shipping the latest …","ref":"/docs/micro/kernels/","title":"Switching kernels"},{"body":" Warning Mocaccino and Luet are under active development and should not be considered “production ready” at this time. The following steps should only be carried out on test systems. Do make sure you have any important data backed up before.  Mocaccino Micro is a musl-based LFS distribution with a minimal set of packages in order to boot and build an entire OS.\nAt the moment are available alpha ISO releases, and the following docker images can be used:\n1  $ docker pull quay.io/mocaccino/micro   Extra repositories Additional packages are available in the mocaccino-extra repositories.\nTo enable them:\n1  $ luet install repository/mocaccino-extra   ","excerpt":" Warning Mocaccino and Luet are under active development and should …","ref":"/docs/micro/","title":"Mocaccino Micro"},{"body":" Warning MocaccinoOS and this wiki is a work in progress, please help us improve by opening a PR or filing an issue.\nMocaccino and Luet are under active development and should not be considered “production ready” at this time. The steps described in the article are for development only and should only be carried out on test systems.\n Welcome to the MocaccinoOS wiki!\n","excerpt":" Warning MocaccinoOS and this wiki is a work in progress, please help …","ref":"/docs/","title":"Documentation"},{"body":"Mocaccino Portage is a Gentoo-based distribution (derived from Sabayon) oriented towards Desktop systems.\nAt the moment are available alpha ISO releases.\nMigrating from Sabayon systems Warning Mocaccino and Luet are under active development and should not be considered “production ready” at this time. The following steps should only be carried out on test systems. Do make sure you have any important data backed up before starting a migration.  You can convert a Sabayon system (running Entropy) to Mocaccino OS (running luet) with the following commands as root\n1 2  curl https://get.mocaccino.org/luet/get_luet_root.sh | sh luet migrate-entropy   Migrations have been checked for systems running Sabayon 18.05 and newer. You can check which version of Sabayon you are running with cat /etc/sabayon-release.\nEnabling the Portage Tree layer Once converted to Mocaccino OS, you will want to enable the Mocaccino Repositories\n1 2  luet install repository/mocaccino-portage-stable luet install repository/mocaccino-extra   Upgrading to the latest packages Install all available newer packages from the Mocaccino repositories using:\n1  luet upgrade   And finally, review and merge any changes to your configuration files:\n1  etc-update   Remove cached downloads If you wish to reclaim the disk space used by the upgrade process (downloaded packages and cached metadata), you can do so using:\n1  luet cleanup   ","excerpt":"Mocaccino Portage is a Gentoo-based distribution (derived from …","ref":"/docs/portagetree/","title":"Mocaccino Portage"},{"body":"","excerpt":"","ref":"/community/","title":"Community"},{"body":"  #td-cover-block-0 { background-image: url(/featured-background_hu2226c7009d5c201991b3c3f4c09a60eb_1455824_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/featured-background_hu2226c7009d5c201991b3c3f4c09a60eb_1455824_1920x1080_fill_q75_catmullrom_top.jpg); } }  MocaccinoOS Learn More   Download   MocaccinoOS is a minimal Linux meta-Distribution\n\n        MocaccinoOS uses luet as Package Manager which is completely static, and it comes with two variants:\n Mocaccino Micro: Musl-based Linux From Scratch using luet. Suited for cloud and docker, but more to come as a Desktop flavor. Mocaccino Portage: Gentoo-based (former Sabayon branch) suited for Desktop environments        No frills MocaccinoOS uses a layered approach for common packages, smoother upgrades so you can focus on the things that matters.\n   Contributions welcome! MocaccinoOS is a Work in progress, step over by our GitHub Organization. New users are always welcome!\nRead more …\n   Get in touch on Slack! For discussions, announcements, etc.\nRead more …\n     Upgrading is not anymore a nightmare You can just focus on your stable system from now on         Static package manager Versioned rootfs as layers, delivered as upgrades or multiple single packages. You can choose the format you like. Musl? Server variant ? we get you covered\n   Layers Static package manager, your system will always be recoverable!\n   Build your packages Thanks to the Docker-based package manager, building and sharing packages has never been so easy!\n     Customize your experience A declarative suite of tools to set your box in the Cloud or in a Server environment        lxd-compose lxd-compose like docker-compose, but for lxd!\n   simplestreams-builder simplestreams-builder simplifies the process for creating the files and directories tree for exposing LXC/LXD images over simplestreams protocol\n   Declarative user management With entities users and groups in your systems are formally declared and can be carried over system easily\n       Yip yip is a small-footprint distro-agnostic cloud-init style tool. Statically built which executes and sets Linux system configurations.\n   Charty charty is a small-footprint templated test-runner. We use it to run QA checks against our packages!\n   Luet luet is a small-footprint static Golang package manager. It uses SAT and RL approaches to solve package dependencies.\n    ","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/","title":"MocaccinoOS"},{"body":"","excerpt":"","ref":"/search/","title":"Search Results"}]